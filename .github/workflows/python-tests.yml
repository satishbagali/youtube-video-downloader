name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r requirements.txt

    - name: Set up environment
      run: |
        # Create necessary directories
        mkdir -p downloads transcripts
        # Create .env file with test values
        echo "YOUTUBE_API_KEY=dummy_key" > .env
        echo "DOWNLOAD_DIR=./downloads" >> .env
        echo "TRANSCRIPT_DIR=./transcripts" >> .env
        echo "MAX_RESULTS=50" >> .env
        # List directory structure for debugging
        echo "Project structure:"
        ls -R
        
    - name: Run tests
      env:
        PYTHONPATH: ${{ github.workspace }}
        YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY || 'dummy_key_for_tests' }}
      run: |
        # Print Python path for debugging
        python -c "import sys; print('Python path:', sys.path)"
        # Run tests with verbose output
        pytest tests/ -v --import-mode=append 
name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

# Cancel in-progress runs for PRs and pushes to the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-html pytest-cov
        pip install -r requirements.txt
        
    - name: Set up test environment
      run: |
        # Create test directories
        mkdir -p test_data/downloads
        mkdir -p test_data/transcripts
        
        # Set up environment variables
        echo "YOUTUBE_API_KEY=dummy_key" >> $GITHUB_ENV
        echo "BASE_DIR=${{ github.workspace }}/test_data" >> $GITHUB_ENV
        echo "DOWNLOAD_DIR=${{ github.workspace }}/test_data/downloads" >> $GITHUB_ENV
        echo "TRANSCRIPT_DIR=${{ github.workspace }}/test_data/transcripts" >> $GITHUB_ENV
        
    - name: Run tests and generate reports
      env:
        YOUTUBE_API_KEY: ${{ env.YOUTUBE_API_KEY }}
        BASE_DIR: ${{ env.BASE_DIR }}
        DOWNLOAD_DIR: ${{ env.DOWNLOAD_DIR }}
        TRANSCRIPT_DIR: ${{ env.TRANSCRIPT_DIR }}
      run: |
        # Print directory structure for debugging
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        
        # Run tests
        python run_tests.py
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()  # Run even if tests fail
      with:
        name: test-results-${{ github.sha }}
        path: test_results/
        retention-days: 30
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: github.repository == 'satishbagali/youtube-video-downloader'  # Only run on main repo
      continue-on-error: true  # Don't fail the workflow if coverage upload fails
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./test_results/*/coverage/.coverage
        fail_ci_if_error: false  # Don't fail if coverage upload fails 
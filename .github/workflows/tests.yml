name: Python Tests

on:
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - 'requirements.txt'
      - '.github/workflows/**'
      - 'tests/**'
      - 'pytest.ini'
  pull_request:
    branches: [ main ]
    paths:
      - '**.py'
      - 'requirements.txt'
      - '.github/workflows/**'
      - 'tests/**'
      - 'pytest.ini'
  workflow_dispatch:  # Allows manual triggering

# Strict concurrency control
concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-html pytest-cov pytest-asyncio
        pip install yt-dlp
        pip install -e .
        
    - name: Set up test environment
      run: |
        # Create test directories
        TEST_BASE_DIR="${{ github.workspace }}/test_data"
        mkdir -p "$TEST_BASE_DIR"
        chmod -R 777 "$TEST_BASE_DIR"
        
        # Create test results directory
        mkdir -p test_results/coverage
        
        # Export minimal environment variables
        echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV
        echo "PYTEST_CURRENT_TEST=true" >> $GITHUB_ENV
        echo "YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}" >> $GITHUB_ENV
        echo "BASE_DIR=${{ github.workspace }}/test_data" >> $GITHUB_ENV
        
    - name: Run tests and generate reports
      env:
        PYTHONPATH: ${{ github.workspace }}
        PYTEST_CURRENT_TEST: true
        YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        BASE_DIR: ${{ github.workspace }}/test_data
      run: |
        # Print test environment
        echo "Current directory: $(pwd)"
        echo "PYTHONPATH: $PYTHONPATH"
        echo "BASE_DIR: $BASE_DIR"
        
        # Run tests with pytest (using pytest.ini configuration)
        python -m pytest
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.sha }}
        path: |
          test_results/
        retention-days: 30
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: github.repository == 'satishbagali/youtube-video-downloader'
      continue-on-error: true
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./test_results/coverage.xml
        fail_ci_if_error: false 